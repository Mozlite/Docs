@page
@model TaskModel
@{
    ViewData["Title"] = "后台服务";
    ViewBag.Current = "sys.tasks";
}

<div class="table-responsive">
    <table class="table table-striped table-bordered data-view">
        <thead>
            <tr>
                <th>服务名称</th>
                <th>运行时间</th>
            </tr>
        </thead>
        <tbody class="data-content">
            @foreach (var task in Model.Tasks)
            {
                <tr>
                    <td>
                        <b>@task.Name</b>
                        <div class="text-secondary">
                            @Html.Raw(task.Description)<span>(@(task.ToHtmlInterval())执行)</span>
                        </div>
                    </td>
                    <td>
                        上一次执行：<span class="last-@task.Id">@task.LastExecuted?.ToString("yyyy-MM-dd HH:mm:ss")</span><br />
                        下一次执行：
                        @if (task.NextExecuting < DateTime.Now)
                        {
                            <span class="current-@task.Id text-success"><i class="fa fa-spinner fa-spin"></i> 运行中...</span>
                        }
                        else
                        {<span class="current-@task.Id">@task.NextExecuting.ToString("yyyy-MM-dd HH:mm:ss")</span>}
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section footer{
    <script type="text/javascript">
        $(function render() {
            Mozlite.ajax('@Url.Page("./Task")', {},
                c => {
                    c.data.forEach(d => {
                        $('.last-' + d.id).html(d.lastExecuted);
                        if (d.nextExecuting) {
                            $('.current-' + d.id).removeClass('text-success').html(d.nextExecuting);
                        } else {
                            $('.current-' + d.id).addClass('text-success')
                                .html('<i class="fa fa-spinner fa-spin"></i> 运行中...');
                        }
                    });
                    setTimeout(render, 2 * 1000);
                    return true;
                }, e => {
                    setTimeout(render, 2 * 1000);
                });
        });
    </script>
}
